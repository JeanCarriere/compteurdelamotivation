{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","check","val","max","test","Number","state","capacite","controle","valeur","securisant","encourageant","bienveillant","stimulant","this","result","Math","floor","className","type","value","onChange","e","setState","target","style","maxWidth","id","nrOfLevels","percent","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAgEeA,E,kDA3Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,MAAQ,SAACC,EAAKC,GACZ,MAAG,WAAWC,KAAKF,GACdG,OAAOH,GAAOC,EACRA,EAAM,GAERD,EAEF,IAlBP,EAAKI,MAAM,CACTC,SAAS,GACTC,SAAS,GACTC,OAAO,GACPC,WAAY,GACZC,aAAc,GACdC,aAAc,GACdC,UAAW,IATI,E,0CAuBnB,WAAU,IAAD,SAOMC,KAAKR,MANXC,EADA,EACAA,SACPC,EAFO,EAEPA,SACAC,EAHO,EAGPA,OACAC,EAJO,EAIPA,WACAC,EALO,EAKPA,aACAC,EANO,EAMPA,aACAC,EAPO,EAOPA,UACME,EAASC,KAAKC,MAAM,KAAKZ,OAAOE,GAAYF,OAAOG,GAAYH,OAAOI,GAAUJ,OAAOK,GAAcL,OAAOM,GAAgBN,OAAOO,GAAgBP,OAAOQ,IAAc,KAChL,OACE,sBAAKK,UAAU,MAAf,UACE,mDACA,gDAAe,uBAAOC,KAAK,OAAOC,MAAOb,EAAUc,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAChB,SAAU,EAAKN,MAAMqB,EAAEE,OAAOJ,MAAO,QAAxH,QACA,gDAAe,uBAAOD,KAAK,OAAOC,MAAOZ,EAAUa,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACf,SAAU,EAAKP,MAAMqB,EAAEE,OAAOJ,MAAO,QAAxH,QAEA,4CACA,uBAAOD,KAAK,OAAOC,MAAOX,EAAQY,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACd,OAAQ,EAAKR,MAAMqB,EAAEE,OAAOJ,MAAO,SANvG,MAQE,oDACA,kDAAiB,uBAAOD,KAAK,OAAOC,MAAOV,EAAYW,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACb,WAAY,EAAKT,MAAMqB,EAAEE,OAAOJ,MAAO,SAA9H,SACA,iDAAmB,uBAAOD,KAAK,OAAOC,MAAOT,EAAcU,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACZ,aAAc,EAAKV,MAAMqB,EAAEE,OAAOJ,MAAO,SAApI,SACA,iDAAmB,uBAAOD,KAAK,OAAOC,MAAOR,EAAcS,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACX,aAAc,EAAKX,MAAMqB,EAAEE,OAAOJ,MAAO,SAApI,SACA,8CAAgB,uBAAOD,KAAK,OAAQC,MAAOP,EAAWQ,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACV,UAAW,EAAKZ,MAAMqB,EAAEE,OAAOJ,MAAO,SAA5H,SAEA,+CACA,iDAAiBf,OAAOE,GAAYF,OAAOG,MAC3C,0CAAaC,KACb,iDAAoBJ,OAAOK,GAAcL,OAAOM,GAAgBN,OAAOO,GAAgBP,OAAOQ,MAC9F,+CAAeE,EAAf,OACA,qBAAKU,MAAO,CAACC,SAAU,SAAvB,SAAiC,cAAC,IAAD,CAAYC,GAAG,eAAgBC,WAAY,GAAIC,QAASd,EAAO,e,GArDpFe,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2dea4acf.chunk.js","sourcesContent":["import React from 'react';\nimport GaugeChart from 'react-gauge-chart'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      capacite:'',\n      controle:'',\n      valeur:'',\n      securisant: '',\n      encourageant: '',\n      bienveillant: '',\n      stimulant: ''\n    };\n  }\n\n  check = (val, max) => {\n    if(/^\\+?\\d+$/.test(val)) {\n      if(Number(val) > max) {\n        return max + '';\n      }\n      return val;\n    }\n    return '';\n  }\n\n  render() {\n    const {capacite,\n    controle,\n    valeur,\n    securisant,\n    encourageant,\n    bienveillant,\n    stimulant} = this.state;\n    const result = Math.floor(100*(Number(capacite) + Number(controle) + Number(valeur) + Number(securisant) + Number(encourageant) + Number(bienveillant) + Number(stimulant)) / 200)\n  return (\n    <div className=\"App\">\n      <h1>Compétence /10</h1>\n      <div>Capacité: <input type=\"text\" value={capacite} onChange={(e) => this.setState({capacite: this.check(e.target.value, 5)})}/>/5</div>\n      <div>Contrôle: <input type=\"text\" value={controle} onChange={(e) => this.setState({controle: this.check(e.target.value, 5)})}/>/5</div>\n\n      <h1>Valeur /10</h1>\n      <input type=\"text\" value={valeur} onChange={(e) => this.setState({valeur: this.check(e.target.value, 10)})}/>/10\n\n      <h1>Environnement /100</h1>\n      <div>Sécurisant: <input type=\"text\" value={securisant} onChange={(e) => this.setState({securisant: this.check(e.target.value, 25)})}/>/25</div>\n      <div>Encourageant: <input type=\"text\" value={encourageant} onChange={(e) => this.setState({encourageant: this.check(e.target.value, 25)})}/>/25</div>\n      <div>Bienveillant: <input type=\"text\" value={bienveillant} onChange={(e) => this.setState({bienveillant: this.check(e.target.value, 25)})}/>/25</div>\n      <div>Stimulant: <input type=\"text\"  value={stimulant} onChange={(e) => this.setState({stimulant: this.check(e.target.value, 25)})}/>/25</div>\n\n      <h1>Ma motivation</h1>\n      <h2>Compétence: {Number(capacite) + Number(controle)}</h2>\n      <h2>Valeur: {valeur}</h2>\n      <h2>Environnement: {Number(securisant) + Number(encourageant) + Number(bienveillant) + Number(stimulant)}</h2>\n      <h2>Résultat: {result}%</h2>\n      <div style={{maxWidth: '30rem'}}><GaugeChart id=\"gauge-chart2\"  nrOfLevels={10} percent={result/100} /></div>\n      \n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}