{"version":3,"sources":["engine.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","check","val","max","test","Number","state","capacite","controle","valeur","bienveillant","encourageant","securisant","stimulant","this","score","Math","floor","date","Date","className","src","engine","alt","type","value","onChange","e","setState","target","style","width","id","textColor","nrOfLevels","percent","colors","toLocaleDateString","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aca5539.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/engine.1f782a3d.png\";","import React from 'react';\nimport GaugeChart from 'react-gauge-chart'\nimport './App.css';\nimport engine from './engine.png';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      capacite: '',\n      controle: '',\n      valeur: '',\n      bienveillant: '',\n      encourageant: '',\n      securisant: '',\n      stimulant: ''\n    };\n  }\n\n  check = (val, max) => {\n    if (/^\\+?\\d+$/.test(val)) {\n      if (Number(val) > max) {\n        return max + '';\n      }\n      return val;\n    }\n    return '';\n  }\n\n  render() {\n    const {capacite,\n    controle,\n    valeur,\n    bienveillant,\n    encourageant,\n    securisant,\n    stimulant} = this.state;\n    const score = Math.floor(100 * ((Number(capacite) * Number(valeur) + Number(controle))  + Number(bienveillant) + Number(encourageant) + Number(securisant) + Number(stimulant)) / 200)\n    const date = new Date();\n    return (\n    <div className=\"wrapper\">\n      <h1>Compteur de la motivation</h1>\n      <img src={engine} className=\"engine\" alt=\"Compteur de la motivation\" />\n      <div className=\"app\">\n        <div className=\"app__left\">\n          <div className=\"app__box\">\n            <div className=\"input\"><span>Compétence</span><input type=\"number\" value={capacite} onChange={(e) => this.setState({capacite: this.check(e.target.value, 10)})}/><span>&nbsp;/&nbsp;10</span></div>\n          </div>\n          <div className=\"app__box\">\n            <div className=\"input\"><span>Valeur</span><input style={{width:'60px'}} type=\"number\" value={valeur} onChange={(e) => this.setState({valeur: this.check(e.target.value, 10)})}/><span> / 10</span></div>\n          </div>\n          <div className=\"app__box\">\n            <div className=\"input\"><span>Contrôle</span><input style={{width:'60px'}} type=\"number\" value={controle} onChange={(e) => this.setState({controle: this.check(e.target.value, 40)})}/><span> / 40</span></div>\n          </div>\n          <div className=\"app__box\">\n            <h2>Environnement</h2>\n            <div className=\"input\"><span>Bienveillant</span><input type=\"number\" value={bienveillant} onChange={(e) => this.setState({bienveillant: this.check(e.target.value, 15)})}/><span>&nbsp;/&nbsp;15</span></div>\n            <div className=\"input\"><span>Encourageant</span><input type=\"number\" value={encourageant} onChange={(e) => this.setState({encourageant: this.check(e.target.value, 15)})}/><span>&nbsp;/&nbsp;15</span></div>\n            <div className=\"input\"><span>Soutenant</span><input type=\"number\" value={securisant} onChange={(e) => this.setState({securisant: this.check(e.target.value, 15)})}/><span>&nbsp;/&nbsp;15</span></div>\n            <div className=\"input\"><span>Stimulant</span><input type=\"number\" value={stimulant} onChange={(e) => this.setState({stimulant: this.check(e.target.value, 15)})}/><span>&nbsp;/&nbsp;15</span></div>\n          </div>\n        </div>\n        <div className=\"app__right\">\n          <GaugeChart className=\"gauge\" id=\"gauge-chart2\" textColor={'#FFF'} nrOfLevels={10} percent={score / 100} colors={['#FF0000', '#00FF00']} />\n          <div className=\"app__box\">\n            <h2>Ma motivation</h2>\n            <h3>Compétence : {Number(capacite)} / 10</h3>\n            <h3>Valeur : {Number(valeur)} / 10</h3>\n            <h3>Contrôle: {Number(controle)} / 40</h3>\n            <h3>Environnement : {Number(bienveillant) + Number(encourageant) + Number(securisant) + Number(stimulant)} /60</h3>\n            <h3>Score : {score} %</h3>\n          </div>\n          <div className=\"app__box\">\n            <h2>Date</h2>\n            <div className=\"input\">{date.toLocaleDateString(\"fr\")}</div>\n          </div>\n          <div className=\"app__box\">\n            <h2>Prénom</h2>\n            <div className=\"input\"><input type=\"text\" /></div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}